USER VIEW 1:
The airline has several types of planes of varying passenger capacities and flight ranges. There are one or more aircraft of each type in the airline’s fleet. Each aircraft has a unique serial number.
Entity: plane and aircraft
 Attributes: pln_typecode, pln_type, pln_cap, f_range, ac_sno, ac_manufatureyear, ac_lastservicedate, ac_nextservicedate
Primary Key: pln_typecode, ac_sno
Functional Dependency: ac_sno -> pln_typecode, ac_manufatureyear, ac_lastservicedate, ac_nextservicedate
			pln_typecode ->  pln_type, pln_cap, f_range
Special Restrictions: None
DBDL 3NF: plane(pln_typecode, pln_type, pln_cap, f_range)
	  aircraft(ac_sno, ac_manufatureyear, ac_lastservicedate, ac_nextservicedate, pln_typecode)
FK -> pln_typecode
Cummulative Design after user view 1: 
 plane(pln_typecode, pln_type, pln_cap, f_range)
aircraft(ac_sno, ac_manufatureyear, ac_lastservicedate, ac_nextservicedate, pln_typecode)


USER VIEW 2:
Pilots are certified only on certain types of planes and the date certified for each plane type needs to be kept. Also, include the pilot’s birthdate, unique social security number and cell phone number. Each scheduled flight is assigned a pilot.
Entity: pilot and pilot certificate details
Attributes: p_id, p_name, p_ssn, p_bd, p_pno, p_cdate f_type, pln_typecode
Primary key: p_id, p_id &p_typecode
Functional Dependency: p_id ->p_name, p_ssn, p_bd, p_pno
			p_id, p_typecode -> p_cdate
                                             
Special Restrictions: Each scheduled flight is assigned a pilot.
DBDL 3NF: 
	pilot(p_id, p_name, p_ssn, p_bd, p_pno)
	pilot_certificate_details(p_id, pln_typecode, p_cdate)
                     FK p_id
	      FK pln_typecode
	pilot_certificate_details(p_id, pln_typecode, p_cdate)


Cumulative Design after user view 2: 
plane(pln_typecode, pln_type, pln_cap, f_range)
aircraft(ac_sno, ac_manufatureyear, ac_lastservicedate, ac_nextservicedate, pln_typecode)
pilot(p_id, p_name, p_ssn, p_bd, p_pno)
pilot_certificate_details(p_id, pln_typecode, p_cdate)




USER VIEW 3:
A flight, which is identified by a unique flight number, has a city of origin and a city of destination but no intermediate stops. The time of departure from the origination city and arrival at the destination city are also recorded. An actual, scheduled flight has a date, an aircraft, and a pilot in addition to all of the above information. A scheduled flight is uniquely identified by the combination of a flight number and date.
Entity: flight, city, flight_schedule
Attributes: f_sno, f_origincitycode, f_destinycitycode, f_deptime, f_arrtime, c_code,c_name, state, airport_name, flight_scheduledate, ac_sno, p_id
Primary key: f_sno, c_code, f_sno & flight_scheduledate
Functional dependency: f_sno -> f_origincitycode, f_destinycitycode, f_deptime, f_arrtime
			c_code -> c_name, state, airport_name
f_sno & flight_scheduledate -> ac_sno, p_id
Special Restrictions: scheduled flight is uniquely identified by the combination of a flight number and date.
DBDL 3NF: flight(f_sno, f_origincitycode, f_destinycitycode, f_deptime, f_arrtime)
 	     city(c_code, c_name, state, airport_name)
	     flight schedule (f_sno, flight_scheduledate, ac_sno, p_id)
      FK  f_origincitycode
                    FK  f_destinycitycode
	    flight(f_sno, f_origincitycode, f_destinycitycode, f_deptime, f_arrtime)
                   FK f_sno
	    FK ac_sno
                  FK p_id
                    Flight_schedule (f_sno, flight_scheduledate, ac_sno, p_id)

Cumulative Design after user view 3: 
plane(pln_typecode, pln_type, pln_cap, f_range)
aircraft(ac_sno, ac_manufatureyear, ac_lastservicedate, ac_nextservicedate, pln_typecode)
pilot(p_id, p_name, p_ssn, p_bd, p_pno)
pilot_certificate_details(p_id, pln_typecode, p_cdate)
flight(f_sno, f_origincitycode, f_destinycitycode, f_deptime, f_arrtime)
 city(c_code, c_name, state, airport_name)
flight_schedule (f_sno, flight_scheduledate, ac_sno, p_id)



USER VIEW 4:
Passengers are booked on scheduled flights. Passengers make a reservation but are not assigned specific seats. For purposes of this database, we will assume that passengers are uniquely identified by an ID of some sort generated by the database system. Also needed for passengers is the first and last name, the main phone number, street address, city, state, zip, email (if available) and birthdate.

Entity: passenger reservation
Attributes: pass_id, pass_firstname, pass_lastname, pass_cnum, pass_add, pass_city, pass_state, pass_zip, pass_email, pass_db, f_sno, flight_scheduledate, numof_tickets
Primary key: pass_id, f_sno, flight_scheduledate, pass_id
Functional Dependency: p_id-> p_firstname, p_lastname, p_cnum, p_add, p_city, p_state, p_zip, p_email, p_db)
f_sno,flight_schedule, pass_id -> numof_tickets
Special Restrictions: NONE
DBDL 3NF: passenger (p_id, p_firstname, p_lastname, p_cnum, p_add, p_city, p_state, p_zip, p_email, p_db)
                    reservation (f_sno, flight_scheduledate, pass_id, numberof_tickets)
     FK pass_id 
     FK f_sno & flight_scheduledate
 	      reservation (f_sno, flight_scheduledate, pass_id, numberof_tickets)

Cumulative Design after user view 4: 
 plane(pln_typecode, pln_type, pln_cap, f_range)
aircraft(ac_sno, ac_manufatureyear, ac_lastservicedate, ac_nextservicedate, pln_typecode)
pilot(p_id, p_name, p_ssn, p_bd, p_pno)
pilot_certificate_details(p_id, pln_typecode, p_cdate)
flight(f_sno, f_origincitycode, f_destinycitycode, f_deptime, f_arrtime)
 city(c_code, c_name, state, airport_name)
flight schedule (f_sno, flight_scheduledate, ac_sno, p_id)
passenger (p_id, p_firstname, p_lastname, p_cnum, p_add, p_city, p_state, p_zip, p_email, p_db)
reservation (f_sno, flight_scheduledate, pass_id, numberof_tickets)                     
